

1. **Function Structure**  
   ✅ Split into focused functions (1 task = 1 function)  
   ✅ Max 30 lines per function  
   ✅ No nested promise chains  
   ✅ No single-letter variables (e.g., `user` not `u`)  
   ✅ Independent `await` calls wrapped in `Promise.all`  
   ✅ No sequential awaits for unrelated operations  
   ✅ Try/catch in parent functions 
   ✅ Try/catch in throw error with clean and clear  msg i display it in ui human readable
   
   ✅ Consistent error format (`{ success, data, error }`)  
   ✅ Contextual error messages ("Failed to load orders" not "Error")  
   ✅ Repeated logic extracted to utils/helpers  
   ✅ No copy-pasted code blocks (>2 duplicates)  
   ✅ No `any` types  
   ✅ Interfaces for complex objects  
   ✅ Zod/data validation in API boundaries  
   ✅ `forEach` replaced with `map`/`filter`/`reduce`  
   ✅ No side effects in data transformations  
   ✅ Functions self-document through names  
   ✅ Complex logic has brief inline comments  
   ✅ Consistent indentation (2/4 spaces)  
   ✅ Existing API fields unchanged  
   ✅ New fields marked as optional (`newField?`)  
